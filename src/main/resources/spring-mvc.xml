<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。即解决了@Controller注解的使用前提配置。-->
	<mvc:annotation-driven validator="validator">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- 默认是ISO-88859-1，避免乱码这里设置为UTF-8 -->
						<value>
							text/html;charset=UTF-8
						</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>

	</mvc:annotation-driven>

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.jftshop.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<mvc:interceptors>
	<!-- 多个拦截器，顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			 <bean class="com.jftshop.interceptor.RequestInterceptor"></bean>
			</mvc:interceptor>
		<mvc:interceptor>

		<mvc:mapping path="/**" />
			<bean id="openSessionInViewInterceptor" class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
			<property name="entityManagerFactory" ref="entityManagerFactory" />
			</bean>
		</mvc:interceptor>

	</mvc:interceptors>

	<!-- 静态资源问题，不需要进行拦截过滤，主要是针对css，js，image等资源 -->
	<mvc:resources mapping="/common/**" location="/common/" cache-period="31536000" />


	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!-- <import resource="classpath:spring/permission/spring-mvc-shiro.xml" /> -->

</beans>